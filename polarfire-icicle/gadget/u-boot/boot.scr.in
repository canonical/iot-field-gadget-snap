# mmc/scsi etc
setenv devtype mmc
# The device number of the given type
setenv devnum 0
# The ubuntu-seed partition
setenv seedpart 1
# The ubuntu-boot partition
setenv bootpart 2
# Address to load the config to
setenv config_addr_r 0xa00000
# Address to load the kernel to
setenv kernel_addr_r 0x5000000
# Address to load the FDT to
setenv fdt_dock_addr_r  0x4f00000
setenv fdt_board_addr_r 0x4f06000
# Address to load the initrd to.
setenv ramdisk_addr_r 0x8000000
# Kernel image filename
setenv kernel_name kernel.img
# Ramdisk filename
setenv ramdisk_name initrd.img
# FDT filename
setenv fdt_board sun20i-d1-lichee-rv.dtb
setenv fdt_dock  sun20i-d1-lichee-rv-dock.dtb

# fitImage filename
setenv fitimage_name fitImage
# Use fitImage
setenv use_fitimage 0
# Address to decompress the kernel image to.
setenv kernel_comp_addr_r 0x20000000

echo "Loading ubuntu-seed configuration..."
load ${devtype} ${devnum}:${seedpart} ${config_addr_r} uboot/ubuntu/boot.sel
env import ${config_addr_r}

echo "Snapd boot mode: ${snapd_recovery_mode}"

if test "${snapd_recovery_mode}" = "run"
then
    echo "Loading ubuntu-boot configuration..."
    load ${devtype} ${devnum}:${bootpart} ${config_addr_r} uboot/ubuntu/boot.sel
    env import ${config_addr_r}
    setenv kernel_bootpart "${bootpart}"
    if test "${kernel_status}" = "try"
    then
        echo "Trying to boot with ${snap_kernel}"
        setenv prefix "uboot/ubuntu/${snap_try_kernel}/"
    else
        echo "Using ${snap_kernel}"
        setenv prefix "uboot/ubuntu/${snap_kernel}/"
    fi
else
    # Prefix within the seed partiion to the boot files
    setenv prefix "systems/${snapd_recovery_system}/kernel/"
    setenv kernel_bootpart "${seedpart}"
fi

setenv console "earlycon=sbi console=ttyS0""
setenv bootargs "${console} rw snapd_recovery_mode=${snapd_recovery_mode} snapd_recovery_system=${snapd_recovery_system} ${bootargs}"

# Load all files
if test "${use_fitimage}" = "0"
then
    echo "Loading ${prefix}${kernel_name}..."
    load ${devtype} ${devnum}:${kernel_bootpart} ${kernel_addr_r} "${prefix}${kernel_name}"
    # Maximum size of the decompressed kernel
    setenv kernel_comp_size "${filesize}"

    echo "Loading ${prefix}${fdt_name}..."
    load ${devtype} ${devnum}:${kernel_bootpart} ${fdt_dock_addr_r}  "${prefix}${fdt_dock}"
    load ${devtype} ${devnum}:${kernel_bootpart} ${fdt_board_addr_r} "${prefix}${fdt_board}"

    echo "Loading ${prefix}${ramdisk_name}..."
    load ${devtype} ${devnum}:${kernel_bootpart} ${ramdisk_addr_r} "${prefix}${ramdisk_name}"
    setenv ramdisk_size "${filesize}"

    booti ${kernel_addr_r} ${ramdisk_addr_r}:${ramdisk_size} ${fdt_addr_r}
else
    echo "Loading ${prefix}${fitimage_name}..."
    load ${devtype} ${devnum}:${kernel_bootpart} ${kernel_addr_r} "${prefix}${fitimage_name}"
    bootm ${kernel_addr_r}
fi
