---
# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2023 Isaac True

name: orange-pi-5plus-gadget
summary: A gadget for the Orange Pi 5+ for use with Ubuntu Core 22
description: |
  A gadget for the Orange Pi 5+ for use with Ubuntu Core 22
adopt-info: u-boot
base: core22
confinement: strict
type: gadget

architectures:
  - build-on:
      - arm64
      - amd64
    build-for: arm64

package-repositories:
  - type: apt
    components: [main]
    architectures: [arm64]
    suites: [jammy, jammy-security, jammy-updates]
    key-id: F6ECB3762474EDA9D21B7022871920D1991BC93C
    url: http://ports.ubuntu.com/ubuntu-ports

parts:
  rkbin-src:
    plugin: dump
    source: https://github.com/rockchip-linux/rkbin.git
    source-branch: master
    source-type: git
    organize:
      "*": rkbin/
    prime:
      - -*

  rkbin:
    after:
      - rkbin-src
    plugin: nil
    source: utils
    override-build: |
      ./copy-rkbin-files.py "${CRAFT_STAGE}"/rkbin \
        "${CRAFT_PART_INSTALL}"/rkbin
    prime:
      - -*

  u-boot-patches:
    plugin: dump
    source: u-boot
    prime:
      - -*

  u-boot:
    after:
      - rkbin
      - u-boot-patches
    plugin: nil
    source: https://github.com/u-boot/u-boot.git
    source-tag: v2024.01
    source-type: git
    source-depth: 1
    build-packages:
      - make
      - ccache
      - device-tree-compiler
      - bison
      - flex
      - python3
      - python-is-python3
      - python3-setuptools
      - python3-pyelftools
      - python3-dev
      - swig
      - libssl-dev
      - on arm64:
          - gcc
      - else:
          - gcc-${CRAFT_ARCH_TRIPLET_BUILD_FOR}
    build-environment:
      - ARCH: "arm"
      - on arm64:
        - CROSS_COMPILE: ""
      - else:
        - CROSS_COMPILE: "${CRAFT_ARCH_TRIPLET_BUILD_FOR}-"
      - PATH: "/usr/lib/ccache:${PATH}"
      - BL31: "${CRAFT_STAGE}/rkbin/rk3588_bl31.elf"
      - TEE: "${CRAFT_STAGE}/rkbin/rk3588_bl32.bin"
      - ROCKCHIP_TPL: "${CRAFT_STAGE}/rkbin/rk3588_ddr.bin"
    override-build: |
      git apply "${CRAFT_STAGE}/0001-arm-dts-rockchip-enable-OP-TEE-support.patch"

      make orangepi-5-plus-rk3588_defconfig

      ./scripts/config --set-val BOOTDELAY 0
      ./scripts/config --enable SYS_REDUNDAND_ENVIRONMENT
      ./scripts/config --enable STACKPROTECTOR
      ./scripts/config --enable SPL_STACKPROTECTOR
      ./scripts/config --disable CMD_STACKPROTECTOR_TEST
      ./scripts/config --disable LEGACY_IMAGE_FORMAT
      ./scripts/config --disable SPL_HEXDUMP
      ./scripts/config --disable EFI_LOADER

      # Enable OP-TEE support. Note: this does not actually work yet
      ./scripts/config --enable TEE
      ./scripts/config --enable OPTEE
      ./scripts/config --enable OPTEE_SERVICE_DISCOVERY
      ./scripts/config --disable OPTEE_LIB
      ./scripts/config --disable CHIMP_OPTEE
      ./scripts/config --disable OPTEE_TA_AVB
      ./scripts/config --disable OPTEE_TA_SCP03
      ./scripts/config --disable CMD_OPTEE_RPMB
      ./scripts/config --disable SCP03

      make olddefconfig
      make -j $(nproc)

      cp u-boot-rockchip.bin ${CRAFT_PART_INSTALL}/
      install -m0755 tools/mkenvimage tools/mkimage \
        -t "${CRAFT_PART_INSTALL}"

      VER=$(strings u-boot-rockchip.bin | grep -E '^U-Boot [0-9]+' | cut -f2 -d\ )
      craftctl set version="${VER}"
      craftctl set grade="stable"
    prime:
      - u-boot-rockchip.bin

  # File required by Ubuntu Core
  u-boot-conf:
    plugin: nil
    override-build: |
      touch ${CRAFT_PART_INSTALL}/uboot.conf

  # File required by Ubuntu Core
  boot-sel:
    plugin: nil
    after:
      - u-boot
    override-build: |
      "${CRAFT_STAGE}"/mkenvimage -r -s 4096 \
        -o ${CRAFT_PART_INSTALL}/boot.sel - < /dev/null

  boot-scr:
    plugin: nil
    source: boot-scr
    after:
      - u-boot
    override-build: |
      "${CRAFT_STAGE}"/mkimage -f "${CRAFT_PART_SRC}"/boot.fit \
        "${CRAFT_PART_INSTALL}"/boot.scr
    build-packages:
      - device-tree-compiler

  hooks:
    plugin: nil
    source: hooks
    stage-packages:
      - uuid-runtime:${CRAFT_ARCH_BUILD_FOR}
    override-build: |
      if [[ -z ${MODEL_APIURL+x} || -z ${MODEL_APIKEY+x} ]]; then
        echo "MODEL_APIKEY or MODEL_APIURL not set; not creating prepare-device hook"
      else
        sed -i "s;<<<MODEL_APIURL>>>;${MODEL_APIURL};" \
          ${CRAFT_PART_BUILD}/prepare-device.inc
        sed -i "s;<<<MODEL_APIKEY>>>;${MODEL_APIKEY};" \
          ${CRAFT_PART_BUILD}/prepare-device.inc

        install -Dm0755 ${CRAFT_PART_BUILD}/prepare-device.inc \
          ${CRAFT_PART_INSTALL}/snap/hooks/prepare-device
      fi
    prime:
      - -usr/share/doc
      - -usr/share/man
      - -usr/share/bash-completion

  fixups:
    plugin: nil
    source: fixups
    stage-packages:
      - ethtool:${CRAFT_ARCH_BUILD_FOR}
    override-build: |
      install -Dm0755 ${CRAFT_PART_BUILD}/disable-offload.sh \
        -t ${CRAFT_PART_INSTALL}/usr/local/bin

apps:
  disable-offload:
    command: usr/local/bin/disable-offload.sh
    daemon: oneshot
    plugs:
      - network-control
