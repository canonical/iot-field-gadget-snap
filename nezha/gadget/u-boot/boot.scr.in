## We can skip loading our device tree here because Qemu
## automatically loads it into the machine for us.

# mmc/scsi etc & number
setenv devtype virtio
setenv devnum  0
# The ubuntu-{boot,seed} partitions
setenv seedpart 1
setenv bootpart 2

# Addresses to load the FDT, config, kernel, & initrd to
setenv fdt_addr_r     0x82200000
setenv config_addr_r  0x82210000
setenv kernel_addr_r  0x82250000
setenv ramdisk_addr_r 0xa0000000

# Kernel, initrd, & FDT filenames
setenv kernel_name  kernel.img
setenv ramdisk_name initrd.img

echo "Loading ubuntu-seed configuration..."
load ${devtype} ${devnum}:${seedpart} ${config_addr_r} uboot/ubuntu/boot.sel
env import ${config_addr_r}

echo "Snapd boot mode: ${snapd_recovery_mode}"

if test "${snapd_recovery_mode}" = "run"
then
    echo "Loading ubuntu-boot configuration..."
    load ${devtype} ${devnum}:${bootpart} ${config_addr_r} uboot/ubuntu/boot.sel
    env import ${config_addr_r}
    setenv kernel_bootpart "${bootpart}"
    if test "${snapd_recovery_mode}" = "try"
    then
        echo "Trying to boot with ${snap_kernel}"
        setenv prefix "uboot/ubuntu/${snap_try_kernel}/"
    else
        echo "Using ${snap_kernel}"
        setenv prefix "uboot/ubuntu/${snap_kernel}/"
    fi
else
    # Prefix within the seed partiion to the boot files
    setenv prefix "systems/${snapd_recovery_system}/kernel/"
    setenv kernel_bootpart "${seedpart}"
fi

setenv console  "earlycon=sbi console=ttyS0"
setenv bootargs "${console} snapd_recovery_mode=${snapd_recovery_mode} snapd_recovery_system=${snapd_recovery_system}"

echo "Loading ${prefix}${kernel_name}..."
load ${devtype} ${devnum}:${kernel_bootpart} ${kernel_addr_r} "${prefix}${kernel_name}"

echo "Loading ${prefix}${ramdisk_name}..."
load ${devtype} ${devnum}:${kernel_bootpart} ${ramdisk_addr_r} "${prefix}${ramdisk_name}"
setenv ramdisk_size "${filesize}"

booti ${kernel_addr_r} ${ramdisk_addr_r}:${ramdisk_size} ${fdt_addr_r}
