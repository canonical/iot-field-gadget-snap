## We can skip loading our device tree here because Qemu
## automatically loads it into the machine for us.

# mmc/scsi etc & number
setenv devtype virtio
setenv devnum  0
# The ubuntu-{boot,seed} partitions
setenv seedpart 1
setenv bootpart 2

# Addresses to load the config, kernel to, names
setenv kernel_addr_r 0xa0000000
setenv kernel_name   kernel.img

echo "Loading ubuntu-seed configuration..."
load ${devtype} ${devnum}:${seedpart} ${scriptaddr} uboot/ubuntu/boot.sel
env import ${scriptaddr}

echo "Snapd boot mode: ${snapd_recovery_mode}"

if test "${snapd_recovery_mode}" = "run"
then
    echo "Loading ubuntu-boot configuration..."
    load ${devtype} ${devnum}:${bootpart} ${scriptaddr} uboot/ubuntu/boot.sel
    env import ${scriptaddr}
    setenv kernel_bootpart "${bootpart}"
    if test "${snapd_recovery_mode}" = "try"
    then
        echo "Trying to boot with ${snap_kernel}"
        setenv prefix "uboot/ubuntu/${snap_try_kernel}/"
    else
        echo "Using ${snap_kernel}"
        setenv prefix "uboot/ubuntu/${snap_kernel}/"
    fi
else
    # Prefix within the seed partiion to the boot files
    setenv prefix "systems/${snapd_recovery_system}/kernel/"
    setenv kernel_bootpart "${seedpart}"
fi

setenv console  "earlycon=sbi console=ttyS0"
setenv bootargs "${console} snapd_recovery_mode=${snapd_recovery_mode} snapd_recovery_system=${snapd_recovery_system}"

echo "Loading FIT Image from ${devtype} ${devnum}:${kernel_bootpart} to address ${kernel_addr_r}"
load ${devtype} ${devnum}:${kernel_bootpart} ${kernel_addr_r} "${prefix}${kernel_name}"

bootm ${kernel_addr_r}
